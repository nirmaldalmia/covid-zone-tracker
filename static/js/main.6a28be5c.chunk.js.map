{"version":3,"sources":["components/StatusDot/StatusDot.component.tsx","components/SearchResults/SearchResults.component.tsx","components/Details/Details.component.tsx","assets/data/popular-cities.js","components/PopularCitiesList/PopularCitiesList.component.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["StatusDot","props","className","style","containerStyle","color","dotStyle","textStyle","text","SearchResults","size","bordered","dataSource","data","renderItem","item","Item","onClick","handleClick","highlight","parts","split","RegExp","map","part","i","key","toLowerCase","fontWeight","getHighlightedText","district","query","Details","state","zone","source","md","sm","marginBottom","lineHeight","fontSize","target","rel","href","ArrowUpOutlined","PopularCities","name","PopularCitiesList","border","Title","Typography","App","filteredData","showSearcResults","selectedItem","fetch","then","res","json","result","setState","zones","catch","error","console","event","value","this","regex","filtered","filter","test","log","length","splice","placeholder","onChange","handleChange","prefix","SearchOutlined","marginLeft","suffix","CloseOutlined","marginRight","handleClear","lg","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6a28be5c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./StatusDot.styles.css\";\r\n\r\ntype Props = {\r\n\tcolor: string;\r\n\ttext: string;\r\n\tcontainerStyle?: object;\r\n\tdotStyle?: object;\r\n\ttextStyle?: object;\r\n}\r\n\r\nconst StatusDot = (props: Props) => {\r\n  return (\r\n    <div className=\"dot-container\" style={props.containerStyle}>\r\n      <div className={\"dot \" + props.color} style={props.dotStyle}></div>\r\n      <p className=\"dot-text\" style={props.textStyle}>{props.text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusDot;\r\n","import React from \"react\";\r\nimport { List } from \"antd\";\r\nimport './SearchResults.styles.css';\r\n\r\ntype Props = {\r\n  data: Array<object>;\r\n\tquery?: string;\r\n\thandleClick: Function;\r\n};\r\n\r\nconst getHighlightedText = (text: string, highlight: string) => {\r\n  // Split on highlight term and include term into parts, ignore case\r\n  const parts = text.split(new RegExp(`(${highlight})`, \"gi\"));\r\n  return (\r\n    <span>\r\n      {\" \"}\r\n      {parts.map((part, i) => (\r\n        <span\r\n          key={i}\r\n          style={\r\n            part.toLowerCase() === highlight.toLowerCase()\r\n              ? { fontWeight: \"bold\" }\r\n              : {}\r\n          }\r\n        >\r\n          {part}\r\n        </span>\r\n      ))}{\" \"}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst SearchResults = (props: Props) => {\r\n  return (\r\n    <List\r\n      size=\"small\"\r\n      // header={<div>Header</div>}\r\n      // footer={<div>Footer</div>}\r\n      bordered\r\n      dataSource={props.data}\r\n      renderItem={(item: any) => (\r\n        <List.Item onClick={() => props.handleClick(item)} className=\"search-item\">\r\n          {getHighlightedText(item.district, props.query || \"\")}\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport \"./Details.styles.css\";\r\nimport StatusDot from \"../StatusDot/StatusDot.component\";\r\nimport { ArrowUpOutlined } from \"@ant-design/icons\";\r\n\r\ntype Props = {\r\n  data: any;\r\n};\r\n\r\nconst Details = (props: Props) => {\r\n  const { district, state, zone, source } = props.data;\r\n  return (\r\n    <Col md={12} sm={24}>\r\n      <Row className=\"details-container\">\r\n        <Col md={6} sm={12}>\r\n          <p className=\"label\">City</p>\r\n        </Col>\r\n        <p style={{ marginBottom: 0, lineHeight: \"30px\" }}>{district}</p>\r\n      </Row>\r\n      <Row className=\"details-container\">\r\n        <Col md={6} sm={12}>\r\n          <p className=\"label\">State</p>\r\n        </Col>\r\n        <p className=\"state\">{state}</p>\r\n      </Row>\r\n      <Row className=\"details-container\">\r\n        <Col md={6} sm={12}>\r\n          <p className=\"label\">Zone</p>\r\n        </Col>\r\n        <StatusDot\r\n          color={zone.toLowerCase()}\r\n          text={`${zone} zone`}\r\n          containerStyle={{ marginBottom: 0 }}\r\n          textStyle={{ fontWeight: 500, fontSize: \"20px\" }}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <a className=\"know-more\" target=\"_blank\" rel=\"noopener noreferrer\" href={source}>\r\n          Know more <ArrowUpOutlined className=\"arrow-icon\" />\r\n        </a>\r\n      </Row>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","const PopularCities = [\r\n\t{\r\n\t\tname: \"Mumbai\",\r\n\t\tzone: \"red\",\r\n\t\tdistrict: \"Mumbai\",\r\n\t},\r\n\t{\r\n\t\tname: \"Delhi\",\r\n\t\tzone: \"red\",\r\n\t\tdistrict: \"New Delhi\",\r\n\t},\r\n\t{\r\n\t\tname: \"Hyderabad\",\r\n\t\tzone: \"red\",\r\n\t\tdistrict: \"Hyderabad\",\r\n\t},\r\n\t{\r\n\t\tname: \"Bengaluru\",\r\n\t\tzone: \"red\",\r\n\t\tdistrict: \"Bengaluru Urban\"\r\n\t},\r\n\t{\r\n\t\tname: \"Kolkata\",\r\n\t\tzone: \"red\",\r\n\t\tdistrict: \"Kolkata\"\r\n\t},\r\n\t{\r\n\t\tname: \"Pune\",\r\n\t\tzone: \"red\",\r\n\t\tdistrict: \"Pune\"\r\n\t},\r\n\t{\r\n\t\tname: \"Lucknow\",\r\n\t\tzone: \"red\",\r\n\t\tdistrict: \"Lucknow\",\r\n\t},\r\n\t{\r\n\t\tname: \"Chennai\",\r\n\t\tzone: \"red\",\r\n\t\tdistrict: \"Chennai\",\r\n\t},\r\n];\r\n\r\nexport default PopularCities;","import React from \"react\";\r\nimport { Row, Col, Divider } from \"antd\";\r\nimport StatusDot from \"../StatusDot/StatusDot.component\";\r\nimport PopularCities from \"../../assets/data/popular-cities\";\r\nimport \"./PopularCitiesList.styles.css\";\r\n\r\ntype Props = {\r\n  handleClick: Function;\r\n};\r\n\r\nconst PopularCitiesList = (props: Props) => (\r\n  <Col md={12} sm={24}>\r\n    <h6 className=\"popular-title\">POPULAR CITIES</h6>\r\n    <Divider style={{ border: \"1px solid rgba(255, 255, 255, 0.12)\" }} />\r\n    <Row>\r\n      {PopularCities.map((item) => (\r\n        <Col md={6} sm={12} key={item.name}>\r\n          <div className=\"popular-item\" onClick={() => props.handleClick(item.district)}>\r\n            <StatusDot color={item.zone} text={item.name} />\r\n          </div>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  </Col>\r\n);\r\n\r\nexport default PopularCitiesList;\r\n","import React from \"react\";\nimport { Row, Col, Typography, Input } from \"antd\";\nimport { SearchOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport \"./App.css\";\nimport StatusDot from \"./components/StatusDot/StatusDot.component\";\nimport SearchResults from \"./components/SearchResults/SearchResults.component\";\nimport Details from \"./components/Details/Details.component\";\nimport PopularCitiesList from \"./components/PopularCitiesList/PopularCitiesList.component\";\n\nconst { Title } = Typography;\n\ntype IProps = {};\ntype IState = {\n  query: string;\n  data: Array<object>;\n  filteredData: Array<object>;\n  showSearcResults: boolean;\n  selectedItem: object | null;\n};\n\nexport default class App extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      query: \"\",\n      data: [],\n      filteredData: [],\n      showSearcResults: false,\n      selectedItem: null,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.covid19india.org/zones.json\")\n      .then((res) => res.json())\n      .then((result) => {\n        this.setState({ data: result.zones });\n      })\n      .catch((error) => console.error(error));\n  }\n\n  handleChange(event: any) {\n    const value = event.target.value;\n    this.setState({ query: value, showSearcResults: true });\n    const regex = new RegExp(`(${value})`, \"i\");\n    const filtered = this.state.data.filter((item: any) =>\n      regex.test(item.district)\n    );\n    console.log(filtered);\n    if (filtered.length > 10) {\n      filtered.splice(10);\n    }\n    this.setState({ filteredData: filtered });\n  }\n\n  handleClear() {\n    this.setState({ query: \"\", showSearcResults: false, selectedItem: null });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Row>\n            <Col md={12} sm={24} className=\"content\">\n              <div>\n                <Title className=\"heading\">Covid Zone Tracker</Title>\n                <p className=\"sub-text subtitle\">\n                  Track which zone your family/loved ones are in\n                </p>\n                <Input\n                  size=\"large\"\n                  placeholder=\"Enter city/district name\"\n                  onChange={(event) => this.handleChange(event)}\n                  value={this.state.query}\n                  prefix={\n                    <SearchOutlined\n                      style={{\n                        fontSize: \"24px\",\n                        color: \"rgba(255, 255, 255, 0.3)\",\n                        marginLeft: \"8px\",\n                      }}\n                    />\n                  }\n                  className=\"searchbar\"\n                  suffix={\n                    !!this.state.query ? (\n                      <CloseOutlined\n                        style={{\n                          fontSize: \"24px\",\n                          color: \"rgba(255, 255, 255, 0.3)\",\n                          marginRight: \"8px\",\n                        }}\n                        onClick={() => this.handleClear()}\n                      />\n                    ) : null\n                  }\n                />\n              </div>\n              {!!this.state.query && this.state.showSearcResults && (\n                <div className=\"results-container\">\n                  <SearchResults\n                    data={this.state.filteredData}\n                    query={this.state.query}\n                    handleClick={(item: any) => {\n                      console.log(item);\n                      this.setState({\n                        showSearcResults: false,\n                        query: item.district,\n                        selectedItem: item,\n                      });\n                    }}\n                  />\n                </div>\n              )}\n            </Col>\n          </Row>\n          <Row>\n            {this.state.selectedItem ? (\n              <Details data={this.state.selectedItem} />\n            ) : (\n              <PopularCitiesList\n                handleClick={(district: string) => {\n                  const filtered = this.state.data.filter(\n                    (item: any) => item.district === district\n                  );\n                  this.setState({ query: district, selectedItem: filtered[0] });\n                }}\n              />\n            )}\n          </Row>\n          <Row>\n            <Col lg={8} md={12} sm={24} className=\"zone-info-container\">\n              <Row>\n                <StatusDot\n                  color=\"red\"\n                  text=\"Red zone\"\n                  textStyle={{ fontWeight: 500 }}\n                />\n                <p className=\"sub-text\" style={{ fontSize: \"14px\" }}>\n                  Most active cases\n                </p>\n              </Row>\n              <Row>\n                <StatusDot\n                  color=\"orange\"\n                  text=\"Orange zone\"\n                  textStyle={{ fontWeight: 500 }}\n                />\n                <p className=\"sub-text\" style={{ fontSize: \"14px\" }}>\n                  Less active cases\n                </p>\n              </Row>\n              <Row>\n                <StatusDot\n                  color=\"green\"\n                  text=\"Green zone\"\n                  textStyle={{ fontWeight: 500 }}\n                />\n                <p className=\"sub-text\" style={{ fontSize: \"14px\" }}>\n                  Very few active cases\n                </p>\n              </Row>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}